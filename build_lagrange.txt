TODO: Install mod_perl on a VM and work with the configuration parameters so
it will install a stowable copy of itself
Note: OpenSSL was not compiled from scratch as of **04Jan2014**

export PREFIX=/usr/local/stow/httpd-X.X.XX-YYYY.JJJ
export PREFIX_SUPPORT=/usr/lib

OpenSSL 1.0.1e
--------------
Wants: zlib1g-dev

./config --prefix=$PREFIX shared zlib
time make
time make test
sudo make install

Apache 2.2.26
------------
Wants: libldap2-dev libexpat1-dev

./configure --prefix=${PREFIX} --enable-modules=all \
--enable-mods-shared=all --enable-v4-mapped --enable-authn-dbm \
--enable-authn-anon --enable-authn-dbd --enable-authn-alias --enable-authz-dbm \
--enable-authz-owner --enable-auth-digest --enable-file-cache --enable-cache \
--enable-disk-cache --enable-mem-cache --enable-dbd --enable-echo \
--enable-deflate --enable-mime-magic --enable-http --enable-dav --enable-info \
--enable-speling --enable-cgi --enable-dav-fs --enable-dav-lock \
--enable-vhost-alias --enable-rewrite --enable-so --with-mpm=prefork \
--enable-proxy --enable-proxy-connect --enable-proxy-ftp --enable-proxy-http \
--enable-ssl --enable-static-htpasswd --with-ssl=${PREFIX} \
--enable-authnz-ldap --with-ldap=ldap --enable-ldap --with-included-apr \
--with-expat=/usr

--with-expat=/usr is apparently needed on 64-bit systems.

time make
sudo make install

PHP 5.4.23
---------
Wants:  libxml2-dev mcrypt libmcrypt-dev libbz2-dev libcurl4-openssl-dev
        libqdbm-dev libgdbm-dev libmysqlclient-dev libjpeg8-dev
        libpng12-dev libfreetype6-dev libsasl2-dev

phpMyAdmin wants --enable-mbstring
icinga-web wants --with-xsl --enable-soap --with-xmlrpc 
    and libxslt1-dev libltdl-dev packages

--with-mysqli is for phpMyAdmin
--with-mysql is for WordPress

Debian Wheezy needs a symlink from the installed `libldap.so` to `/usr/lib`

  sudo ln -fs /usr/lib/x86_64-linux-gnu/libldap_r-2.4.so.2.8.3 /usr/lib/libldap.so

./configure --prefix=${PREFIX} \
--with-apxs2=${PREFIX}/bin/apxs --with-config-file-path=/etc/httpd \
--with-config-file-scan-dir=/etc/httpd --with-openssl --with-zlib \
--with-bz2 --enable-calendar --enable-dba --with-gdbm --enable-exif \
--enable-ftp --with-gd --with-jpeg-dir=$PREFIX_SUPPORT \
--with-png-dir=$PREFIX_SUPPORT --with-freetype-dir=$PREFIX_SUPPORT \
--enable-gd-native-ttf --with-gettext=$PREFIX_SUPPORT \
--with-ldap --with-ldap-sasl \
--with-mysql --with-mysqli --with-mysql-sock=/var/run/mysqld/mysqld.sock \
--enable-sockets --enable-sysvsem --enable-sysvshm --with-curl \
--enable-zip --with-pear --with-pdo-mysql --with-mcrypt --enable-mbstring \
--with-xsl --enable-soap --with-xmlrpc

time make
sudo make install

Phabricator extensions: 
- sudo pecl install apc

OpenPhoto extensions:
- sudo apt-get install libmagick9-dev
- sudo pecl install imagick
- sudo pecl install apc

mod_perl 2.0.7
--------------
Make sure 'libperl.so' exists, it should be a [sym|hard]link back to
libperl.so.5.X.X.  If it doesn't exist, create it as a symlink back to the
library file.

For Linux:
perl Makefile.PL MP_APXS=${PREFIX}/bin/apxs 

For OS X:
perl Makefile.PL MP_APXS=${PREFIX}/bin/apxs MP_CCOPTS=-std=gnu89

time make
time LD_LIBRARY_PATH=${PREFIX}/lib make test
# if you are running a previous instance of mod_perl under stow, unstow that
# instance prior to running make install, as mod_perl's make install is stupid
# and will happily overwrite your existing mod_perl files
sudo make install

To install with a log of what got installed where:
sudo make install 2>&1 | tee install.log

Move /usr/local/lib/perl to /usr/local/stow/httpd-2.2.XX/lib
Move /usr/local/man/man3 to /usr/local/stow/httpd-2.2.XX/man

Testing
-------
- phpinfo.php page
  - https://shell.xaoc.org/phpMyAdmin/phpinfo.php - requires login first
- http://purl.xaoc.org/perl-status
- http://purl.xaoc.org/server-status
- http://purl.xaoc.org/server-info

Building fake Debian packages using 'equivs'
--------------------------------------------
apt-get install equivs
equivs-control libapache2-mod-perl2
equivs-build libapache2-mod-perl2
sudo dpkg -i libapache2-mod-perl2_2.0.X_all.deb

you can use 'dpkg -P' to get a list of packages to build with equivs in order
to satisfy dependencies for something.  The equivs dummy packages should have
their version numbers changed when you do a new install of Apache.

Example equivs are stored in:

ssh://purl443/srv/git/hostcfgs.git/httpd/debian_equivs
